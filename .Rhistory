H=diag(0,2) # no noise in observation equation
)
# Predict values for our statespace model- sea level values
# Predict values for our statespace model
SL<-predict(K2,interval = "confidence", level = 0.6 )[[1]]
predict(K2,interval = "confidence", level = 0.6 )[[1]] %>%
#convert to time series
ts %>%
# plot
autoplot()+autolayer(ts_data[,1],color="black")+
scale_color_manual(values=c("red","blue","blue"))+
labs(x="periods",y="y",
title="Forecasts for y conditional on x",
subtitle="y and x are bivariate VECM, x observed after period 40, y is not")+
geom_vline(xintercept=40,linetype=2)+
annotate(geom="text",x=40.5,y=0, label="Forecasts for X available, \nY unobserved",hjust=0)
SL_fit<-cumsum(SL[,1])
return(SL_fit)
}
worst_case <- ts(conditional("WC"), start=1993, freq=12)
best_case <- ts(conditional("BC"), start=1993, freq=12)
Bau <- ts(conditional(""), start=1993, freq=12)
# Create a data frame with the time series data
plot_data <- data.frame(
Time = time(best_case),
Best_Case = best_case,
Worst_Case = worst_case,
Business_as_Usual = Bau
)
# Add a new column to your data frame for the line color
plot_data$line_color <- ifelse(plot_data$Time < as.numeric(2024), "Observations", "Business as usual")
ggplot(plot_data, aes(x = Time)) +
geom_line(aes(y = Best_Case, color = "Best Case")) +
geom_line(aes(y = Worst_Case, color = "Worst Case")) +
geom_line(aes(y = Business_as_Usual, color = line_color)) +  # Use the new line_color column here
labs(x = "Time", y = "Value", title = "Projections of Sea Level") +
scale_color_manual(values = c("Best Case" = "blue", "Worst Case" = "red", "Observations" = "black", "Business as usual" = "green")) +  # Add a new color mapping for "Pre-2024"
theme_minimal() +
geom_vline(xintercept = as.numeric(2024), linetype="dashed")
case <- projections[,3]
case <- ts(case, start=1993)
# Create a new time series with monthly frequency for the same period
new_time <- seq(from=start(case)[1], to=end(case)[1], by=1/12)
# Use the approx function to interpolate the data
case_monthly <- approx(x=time(case), y=case, xout=new_time)$y
# Convert the result to a time series object
case <- ts(case_monthly, start=1993, freq=12)
# ===================================== Stationarity ===================================== #
fit.C02 <- tslm(CO2 ~ season)
residuals <- resid(fit.C02)
CO2_ds <- residuals
fit.SL <- tslm(SL ~ season)
residuals <- resid(fit.SL)
SL_ds <- residuals
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= SL_ds
)
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
VAR<- VARrep(VECM)
case <- ts(case, freq=12, start=1993)
#deseasonalising the data
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
case_ds
plot(case_ds)
summary(VAR)
VAR<- VARrep(VECM)
VAR
VAR[constant,SL]
VAR[0,0]
VAR[,1]
VAR[1,1]
deseasonalising the data
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:371,1] <- ts(SL)
storage[1:372,1] <- ts(SL)
storage[1:372,1] <- ts(ds_data[,c("SL")]
storage[1:1284,2] <- ts(case_diff)[1:1284]
storage[1:372,1] <- ts(SL_ds)
storage[1:372,1] <- ts(SL_ds)
storage[1:1284,2] <- ts(case_ds)[1:1284]
storage
VAR[1,1]
VAR
VAR[1,2]
storage[1:372,1] <- ts(SL_ds)
storage[1:1284,2] <- ts(case_ds)[1:1284]
for (i in 373:1284){
SL <- VAR[1,1]+VAR[1,2]*storage[i-1,1]+VAR[1,3]*storage[i-1,2]+VAR[1,4]*storage[i-2,1]+VAR[1,5]*storage[i-2,2]+VAR[1,6]*storage[i-3,1]+VAR[1,7]*storage[i-3,2]+VAR[1,8]*storage[i-4,1]+VAR[1,9]*storage[i-4,2]+VAR[1,10]*storage[i-5,1]+VAR[1,11]*storage[i-5,2]+VAR[1,12]*storage[i-6,1]+VAR[1,13]*storage[i-6,2]+VAR[1,14]*storage[i-7,1]+VAR[1,14]*storage[i-7,2]
Storage[i,1]<-SL
}
for (i in 373:1284){
SL <- VAR[1,1]+VAR[1,2]*storage[i-1,1]+VAR[1,3]*storage[i-1,2]+VAR[1,4]*storage[i-2,1]+VAR[1,5]*storage[i-2,2]+VAR[1,6]*storage[i-3,1]+VAR[1,7]*storage[i-3,2]+VAR[1,8]*storage[i-4,1]+VAR[1,9]*storage[i-4,2]+VAR[1,10]*storage[i-5,1]+VAR[1,11]*storage[i-5,2]+VAR[1,12]*storage[i-6,1]+VAR[1,13]*storage[i-6,2]+VAR[1,14]*storage[i-7,1]+VAR[1,14]*storage[i-7,2]
storage[i,1]<-SL
}
storage
for (i in 373:1284) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
tail(storage)
VAR[1,1]
VAR
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
CO2
projections[,3]
case <- projections[,3]
case <- ts(case, start=1993)
# Create a new time series with monthly frequency for the same period
new_time <- seq(from=start(case)[1], to=end(case)[1], by=1/12)
# Use the approx function to interpolate the data
case_monthly <- approx(x=time(case), y=case, xout=new_time)$y
# Convert the result to a time series object
case <- ts(case_monthly, start=1993, freq=12)
case
fit.C02 <- tslm(CO2 ~ season)
residuals <- resid(fit.C02)
CO2_ds <- residuals
fit.SL <- tslm(SL ~ season)
residuals <- resid(fit.SL)
SL_ds <- residuals
#deseasonalised data
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= SL_ds
)
# ===================================== Estimating VECM model on full sample ===================================== #
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
case <- ts(case, freq=12, start=1993)
#deseasonalising the data
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:372,1] <- ts(SL_ds)
storage[1:1284,2] <- ts(case_ds)[1:1284]
for (i in 373:1284) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
case
residuals <- resid(fit.case)
case_ds <- residuals
case_ds
plot(case)
plot(case_ds)
plot(CO2_ds)
CO2
fit.C02 <- tslm(CO2 ~ season)
residuals <- resid(fit.C02)
CO2_ds <- residuals
CO2_ds
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
VAR
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:372,1] <- ts(SL_ds)
storage[1:1284,2] <- ts(case)[1:1284]
storage
for (i in 373:1284) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:372,1] <- ts(SL_ds)
storage[1:1284,2] <- ts(case_ds)[1:1284]
for (i in 373:1284) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
tail(storage)
plot(storage[,1])
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
case
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= case
)
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= case[1:372]
)
ds_data
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
VAR
-3.546348e-06
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:372,1] <- ts(SL_ds)
storage[1:1284,2] <- ts(case_ds)[1:1284]
for (i in 373:1284) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= SL_ds
)
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
VAR
for (i in 373:374) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
#=========================================================================================================== #
#
#                                     This Tool makes proejections based on RCP
#
#
# =========================================================================================================== #
# ===================================== Load data and packages ============================================== #
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
# ===================================== Naive projections ===================================== #
#################################################################################################
conditional<- function (case){
if (case == "WC") {
case <- projections[,3]
} else if (case =="BC")  {
case <- projections[,4]
} else {
case <- projections[,2]
}
# ===================================== Linear interpolation ===================================== #
case <- ts(case, start=1993)
# Create a new time series with monthly frequency for the same period
new_time <- seq(from=start(case)[1], to=end(case)[1], by=1/12)
# Use the approx function to interpolate the data
case_monthly <- approx(x=time(case), y=case, xout=new_time)$y
# Convert the result to a time series object
case <- ts(case_monthly, start=1993, freq=12)
# ===================================== Stationarity ===================================== #
fit.C02 <- tslm(CO2 ~ season)
residuals <- resid(fit.C02)
CO2_ds <- residuals
fit.SL <- tslm(SL ~ season)
residuals <- resid(fit.SL)
SL_ds <- residuals
# ===================================== Data preperation ===================================== #
#deseasonalised data
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= SL_ds
)
# ===================================== Estimating VECM model on full sample ===================================== #
#deseasonalising the data
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
#creating matrix to store SL values and the Combined_Worst_case
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:372,1] <- ts(SL_ds)
storage[1:372,2] <- ts(CO2_ds)
for (i in 373:374) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
case <- projections[,3]
# ===================================== Linear interpolation ===================================== #
case <- ts(case, start=1993)
# Create a new time series with monthly frequency for the same period
new_time <- seq(from=start(case)[1], to=end(case)[1], by=1/12)
# Use the approx function to interpolate the data
case_monthly <- approx(x=time(case), y=case, xout=new_time)$y
# Convert the result to a time series object
case <- ts(case_monthly, start=1993, freq=12)
# ===================================== Stationarity ===================================== #
fit.C02 <- tslm(CO2 ~ season)
residuals <- resid(fit.C02)
CO2_ds <- residuals
fit.SL <- tslm(SL ~ season)
residuals <- resid(fit.SL)
SL_ds <- residuals
# ===================================== Data preperation ===================================== #
#deseasonalised data
ds_data <- data.frame(
Month = 1:length(CO2_ds),  # Assuming the time series is monthly
CO2 = CO2_ds,
SL= SL_ds
)
# ===================================== Estimating VECM model on full sample ===================================== #
#deseasonalising the data
fit.case <- tslm(case ~ season)
residuals <- resid(fit.case)
case_ds <- residuals
VECM<-VECM(ds_data[,c("SL", "CO2")], lag=6, r=1)
VAR<- VARrep(VECM)
#creating matrix to store SL values and the Combined_Worst_case
storage <- as.data.frame(matrix(data=NA,
nrow=1284, ncol=2))
storage[1:372,1] <- ts(SL_ds)
storage[1:372,2] <- ts(CO2_ds)
for (i in 373:374) {
SL <- VAR[1,1] +
VAR[1,2] * storage[i-1,1] +
VAR[1,3] * storage[i-1,2] +
VAR[1,4] * storage[i-2,1] +
VAR[1,5] * storage[i-2,2] +
VAR[1,6] * storage[i-3,1] +
VAR[1,7] * storage[i-3,2] +
VAR[1,8] * storage[i-4,1] +
VAR[1,9] * storage[i-4,2] +
VAR[1,10] * storage[i-5,1] +
VAR[1,11] * storage[i-5,2] +
VAR[1,12] * storage[i-6,1] +
VAR[1,13] * storage[i-6,2] +
VAR[1,14] * storage[i-7,1] +
VAR[1,14] * storage[i-7,2]
storage[i,1] <- SL
}
storage
case <- projections[,3]
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
cat("\014")
graphics.off()  # clear all graphs
rm(list = ls()) # remove all files from your workspace
pacman::p_load(pacman, urca, vars, tsDyn,forecast,readxl,xts, ggfortify, stargazer, tseries, ggplot2, tidyr, caret,  dplyr, foreach, randomForest, kableExtra, keras, ModelMetrics, xlsx,KFAS) #installing neccesary packages
data <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\Final.xlsx") #Change to your own directory
projections <-read_excel("C:\\Users\\mariu\\OneDrive\\Skrivebord\\UNI\\8. semester\\Economic forecasting\\Project\\Code\\RCP1.xlsx") #Change to your own directory
tail(projections)
CO2 <-ts(data$CO2, freq=12, start=1993)
SL <-ts(data$GMSL, freq=12, start=1993)
